[{"data":1,"prerenderedAt":89},["Reactive",2],{"search-api":3},[4,11,23,31,39,47,70,80],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     \nExploreX —   \nExplore. Beyond Bounds.   An initiative by   PIXL Studios .     Rich, Easy to understand and Well Documented User Interface.   50+ Pages  documented and increasing.  Custom Made Media such as Images and Slideshows.  Use of Simple Grammar to ensure clarity of concepts.  Highly Capable Search System   (Search ⌘K)         Why Choose Us?      Innovative Learning Experience   Explorex offers an innovative and immersive learning experience tailored for modern classrooms. With interactive 3D models, engaging quizzes, and seamless application access, students can grasp complex concepts effortlessly.    Enhanced Educator Support   Explorex empowers teachers with comprehensive tools to manage classrooms effectively. You can conduct quizzes, use X-Write to work efficiently and show interactive 3D Models to facilitate the process of learning effectively.    Effortless Application Access   Say goodbye to the hassle of navigating between various applications. Explorex simplifies the process with quick access, allowing both teachers and students to focus on learning rather than tech complexities.    Seamless Integration with School Curriculum   Explorex seamlessly integrates with existing school curricula, making it a valuable addition to any classroom. Our app aligns with educational standards, allowing educators to effortlessly incorporate it into their teaching plans.    Constant Innovation and Updates   We are committed to continuous improvement. Explorex regularly updates its features, ensuring that both teachers and students have access to the latest educational tools and technologies. Your learning experience with Explorex will always be cutting-edge.    Well Documented User Interface   We've made sure to document the working of not only apps in the   PIXL Suite , but also many other apps such as File Manager, WPS Office, Microsoft Teams and Many More!",{"id":12,"path":13,"dir":14,"title":15,"description":16,"keywords":17,"body":22},"content:1.introduction:1.getting-started.md","/introduction/getting-started","introduction","Getting Started with ExploreX","Welcome to ExploreX, the innovative educational application that is reshaping the way we learn and teach. This comprehensive guide will walk you through the features and functionalities of ExploreX, ensuring a smooth and engaging experience in your educational journey. The best part? ExploreX is completely free to use, with no registration or login required!",[18,19,20,21],"What is ExploreX?","Key Features:","Installation and Setup","Conclusion","  Getting Started with ExploreX  Welcome to ExploreX, the innovative educational application that is reshaping the way we learn and teach. This comprehensive guide will walk you through the features and functionalities of ExploreX, ensuring a smooth and engaging experience in your educational journey. The best part? ExploreX is completely free to use, with no registration or login required!  What is ExploreX?  ExploreX is a user-friendly educational tool designed to enhance the classroom experience for both educators and students. Its intuitive interface and powerful features simplify the teaching process, making learning more interactive and enjoyable.  Key Features:  1. Quick Access to Applications:  Easily navigate through, install, or just update through a variety of applications with just a few clicks. ExploreX simplifies the process, ensuring that you spend more time teaching and less time managing technology.  2. Built-in Browser:  Seamlessly integrate online resources into your lessons using the built-in browser. Say goodbye to switching between complex tabs stattered everywhere; everything you need is right at your fingertips!  3. 3D Model Interaction:  Bring complex concepts to life with new levels of simplicity using our 3D Models Library! You can zoom, pan across, and explore through a plethora of 3D models—whether you're looking for something complex like the Anatomy of the Human Eye, or something simple like a Book, it's all right here, just in a couple clicks, all in a completely safe environment.*  Installation and Setup  Download and Install ExploreX  Using the button below you can download and install ExploreX, or you could also visit our official   website  to do so—and the best part? No Registration or Login required, and everything is completely free!\n  \n...and that's all you have to do! All of the setting up is automatically completed in the background, while the user is taken through an onboarding experience to familiarise themselves with the app.  Homepage Overview  Upon launching ExploreX, you'll find yourself on the homepage. Take a moment to observe the neatly organized chips on the top, ensuring quick and easy navigation, along with the time and weather above. You can find other advanced tools if you scroll down, but more on that later. This intuitive design ensures that you can swiftly identify and access the applications you need for your lessons.  Navigating Applications  Click on any application to see it's context page, where you can open or update the app to it's latest version. Explore its features, test its functionality, and get accustomed to its interface. Familiarize yourself with the layout, menus, and available options. Most applications within ExploreX have simplified interfaces, making it easy for educators to use them effectively.  Using the Built-in Browser  To access the built-in browser, click on the dedicated browser chip on the homepage. Enter the URL of an educational website or search for specific topics of interest. Navigate through the web content just like you would on any standard browser. Take note of the seamless transition between applications and web pages, enabling you to enrich your lessons with a vast array of online resources.  Interacting with 3D Models  Access the 3D model tool to explore the extensive library of interactive models. Click on a model to open it. Use touch gestures to rotate, zoom, and manipulate the model. Appreciate the intricate details and educational value these models bring to your lessons. Consider how you can incorporate them into your teaching to enhance students' understanding of complex subjects.  Conclusion  By delving into the detailed exploration of ExploreX’s user interface, you equip yourself with the knowledge and confidence needed to create immersive and interactive lessons. Whether you are an educator aiming to transform your classroom or a student eager to explore the wonders of education, ExploreX provides the tools you need to succeed.",{"id":24,"path":25,"dir":14,"title":26,"description":27,"keywords":28,"body":30},"content:1.introduction:2.master-ui.md","/introduction/master-ui","Master User Interface","Master the user interface of ExloreX to ensure a smooth classroom experience.",[29,21],"Overview","  Master User Interface  Master the user interface of ExloreX to ensure a smooth classroom experience.  Overview  This page serves as a comprehensive guide, leading you through the intricacies of the user interface (UI) within ExploreX, guaranteeing a smooth and uninterrupted learning journey.  Getting Started  Upon launching ExploreX, you'll be greeted by a clean and intuitive interface. The dashboard is designed for easy navigation, with icons representing key features. You'll see the current time  The QuikNav  Just below the current time, you'll see what we call the \"QuikNav.\" The QuikNav, as the name suggests, is a Quick way of Navigating across ExploreX. Here, you'll see ExploreX's key features such as the 3D Model Library, the Browser, and the Dashboard.  The Searchbar  Next up, the searchbar. The searchbar helps you look for anything, from in-app settings to web searches, you'll be able to look for absolutely anything! Couldn't quite find what you were looking for? Use our exclusive AI instead, all built in!  Conclusion  We've made sure to keep the User Interface of ExploreX as simple and clean as possible, ensuring a smooth classroom experience!",{"id":32,"path":33,"dir":14,"title":34,"description":35,"keywords":36,"body":38},"content:1.introduction:3.writing-pages.md","/introduction/writing-pages","Writing Pages","Docus is made to let you write all your content in Markdown and Vue components with the MDC syntax.",[37],"Frontmatter","  Writing Pages  Docus is made to let you write all your content in Markdown and Vue components with the MDC syntax.  Each Markdown pages in the   content/  folder will be mapped to a route.     File  Generated route     index.md   /    about.md   /about    blog/index.md   /blog    blog/hello.md   /blog/hello    1.guide/2.installation   /guide/installation  Frontmatter  Docus supports multiple Front-matter attributes for pages.     ---   title  :   \"Get Started\"   description  :   \"Let's learn how to use my amazing module.\"   ---      Key   Type   Default   Description     layout   string   default  Use any layout name like you would in   definePageMeta()    title   string   Defines the page title and H1 in docs pages    description   string   Defines the page description and excerpt in docs pages    redirect   string   A route path to redirect    image   object   OpenGraph cover image    Docs layout options       aside   boolean   Toggles the visibility of aside navigation    toc   boolean   Toggles the visibility of table of contents    header   boolean   Toggles the visibility of the page header    bottom   boolean   Toggles the visibility of page bottom section    Navigation options       navigation   boolean   Toggles the visibility of the page or directory in navigation    navigation.title   string   Changes the name of the page or directory in navigation    navigation.icon   string   Changes the icon of the page or directory in navigation  html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}",{"id":40,"path":41,"dir":14,"title":42,"description":43,"keywords":44,"body":46},"content:1.introduction:4.configuration.md","/introduction/configuration","Configuration","Learn how to configure Docus.",[45],"Customizing the logo","  Configuration  Learn how to configure Docus.      export   default   defineAppConfig  ({     docus: {       title:   'Docus'  ,       description:   'My Docus Project'  ,       url:   'http://docus.dev'     }   })     export   default   defineAppConfig  ({     docus: {       title:   'Docus'  ,       description:   'My Docus Project'  ,       url:   'http://docus.dev'  ,       image:   '/social-card-preview.png'  ,       socials: {         twitter:   '@nuxt_js'  ,         github:   'nuxt-themes/docus'  ,       },       github: {         root:   'content'  ,         edit:   true  ,         contributors:   false       },       layout:   'default'  ,       aside: {         level:   1  ,         filter: [],       },       header: {         title:   false  ,         logo:   true  ,         showLinkIcon:   false       },       footer: {         credits: {           icon:   'IconDocus'  ,           text:   'Powered by Docus'  ,           href:   'https://docus.dev'  ,         },         textLinks: [           {             text:   'Nuxt'  ,             href:   'https://nuxt.com'  ,             target:   '_blank'  ,             rel:   'noopener'           }         ],         iconLinks: [           {             label:   'NuxtJS'  ,             href:   'https://nuxtjs.org'  ,             component:   'IconNuxtLabs'  ,           },           {             label:   'Vue Telescope'  ,             href:   'https://vuetelescope.com'  ,             component:   'IconVueTelescope'  ,           },         ],       }     }   })      Key   Type   Default   Description     title   string  Docus  Website title    titleTemplate   string  Docus  Website title template    description   string  My Docus Project  Website description    url   string   Website URL    layout   string  default  Fallback layout to use (supports   default  or   page )    Socials       socials   object   {}  Social links    socials.github   string   The repository to use on GitHub links    socials.twitter   string   The account to use on Twitter links    socials.youtube   string   The channel to use on Youtube links    socials.instagram   string   The account to use on Instagram links    socials.facebook   string   The account to use on Facebook links    socials.medium   string   The account to use on Medium links    socials.[social]   object   Override social or display custom one    socials.[social].label   string   A label to use for the social    socials.[social].icon   string   A icon to use for the social    socials.[social].href   string   A link to use for the social    socials.[social].rel   string   noopener noreferrer  A space-separated list of   link types    Header       header   object   Header configuration    header.logo   boolean   Whether or not to use   Logo.vue  as the header logo    header.title   string   If set to a string, will be used in the header    header.showLinkIcon   boolean   If set to   true  links icons will show in the header    header.exclude   string[]   An array of path to exclude out from the header navigation    header.fluid   boolean   true  Make header   Container  fluid    Main       main   object   Main configuration    main.fluid   boolean   true  Make main content   Container  fluid    main.padded   boolean   true  Make main content   Container  padded    Aside       aside   object   Aside configuration    aside.level   string  0  Aside base level of nesting    aside.collapsed   boolean   Will be used as default value for collapsible navigation categories    aside.exclude   string[]   An array of path to exclude out from the aside navigation    Footer       footer   object   Footer configuration    footer.credits   object   An object defining the bottom left credits    footer.credits.icon   object   The icon to use for the credits    footer.credits.text   object   The text to use for the credits    footer.textLinks   array   []  An array of texts to display at the center of footer    footer.textLinks[0].text   string   The text to display    footer.textLinks[0].href   string   A link to use for the text    footer.textLinks[0].target   string   _self  Where to display the linked URL, as the name for a browsing context    footer.textLinks[0].rel   string   noopener noreferrer  A space-separated list of   link types    footer.iconLinks   array   []  An array of icons to display in the footer    footer.iconLinks[0].label   string   A label to use for the icon    footer.iconLinks[0].href   string   A link to use for the icon    footer.iconLinks[0].icon   string   The icon to use (can be a component name)    footer.iconLinks[0].rel   string   noopener noreferrer  A space-separated list of   link types    footer.fluid   boolean   true  Make footer   Container  fluid    GitHub       github   object   false  GitHub integration configuration    github.dir   string   Directory containing the files to be edited    github.branch   string   Branch to start editing    github.repo   string   Name of the GitHub repo to edit files    github.owner   string   Owner of the repo    github.edit   boolean   Toggle \"Edit this page on Github\" component on documentation pages    Search       fuse   object   useFuse   options  Customizing the logo  To update the logo in the header, create a component in   components/Logo.vue  with your own logo.  In this example, the image is located at   /public/img .     \u003C  template  >     \u003C  img   width  =  \"120\"   src  =  \"/img/YOURLOGO.png\"  />   \u003C/  template  >  html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}",{"id":48,"path":49,"dir":50,"title":51,"description":52,"keywords":53,"body":69},"content:2.api:1.components.md","/api/components","api","Components","Discover every component you can use in your content.",[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"\u003CAlert />","\u003CBadge />","\u003CBlockHero />","\u003CButtonLink />","\u003CCallout />","\u003CCard />","\u003CCardGrid />","\u003CCodeGroup />","\u003CCodeBlock />","\u003CCopyButton />","\u003CIcon />","\u003CList />","\u003CSandbox />","\u003CTerminal />","\u003CVideoPlayer />","  Components  Discover every component you can use in your content.   \u003CAlert />     Check out an   info  alert with   code  and a   link .   Check out a   success  alert with   code  and a   link .   Check out a   warning  alert with   code  and a   link .   Check out a   danger  alert with   code  and a   link .     ::alert{type=\"info\"}   Check out an   **info**   alert with   `code`   and a [  link  ](  /  ).   ::    ::alert{type=\"success\"}   Check out a   **success**   alert with   `code`   and a [  link  ](  /  ).   ::    ::alert{type=\"warning\"}   Check out a   **warning**   alert with   `code`   and a [  link  ](  /  ).   ::    ::alert{type=\"danger\"}   Check out a   **danger**   alert with   `code`   and a [  link  ](  /  ).   ::     \u003CBadge />   \u003CBadge />  support same types as   \u003CAlert /> .     v1.2  Deprecated   Not found!     :badge[  v1.2  ]    :badge[  Deprecated  ]{type=\"warning\"}    ::badge{type=\"danger\"}   Not found!   ::     \u003CBlockHero />      Document-driven framework   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.     ::block-hero   ---   cta:     -   Get started     -   /get-started   secondary:     -   Open on GitHub →     -   https://github.com/nuxtlabs/docus   snippet: npx nuxi@latest init docus-app -t nuxtlabs/docus-starter   ---   #title   Document-driven framework    #description   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.   ::     \u003CButtonLink />    Play on StackBlitz     :button-link[Play on StackBlitz]{icon=\"IconStackBlitz\" href=\"https://stackblitz.com/github/nuxtlabs/docus-starter\" blank}     \u003CCallout />   \u003CCallout />  support same types as   \u003CAlert /> .      This is a callout! Click me to open.   This is the content of the callout.    This is a callout! Click me to open.   This is the content of the callout.     ::callout   #summary   This is a callout! Click me to open.    #content   This is the content of the callout.   ::       ::callout{type=\"warning\"}   #summary   This is a callout! Click me to open.    #content   This is the content of the callout.   ::     \u003CCard />      Nuxt Architecture.   Based on   Nuxt 3  and   Nuxt Content .   \nUse Nuxt to build a static site, or a serverless app.      ::card{icon=\"logos:nuxt-icon\"}    #title    Nuxt Architecture.    #description    Based on   **Nuxt 3**   and   **Nuxt Content**  . :br    Use Nuxt to build a static site, or a serverless app.    ::     \u003CCardGrid />      What's included?      Nuxt Architecture.   Harness the full power of Nuxt and the Nuxt ecosystem.    Vue Components.   Use built-in components (or your own!) inside your content.    Write Markdown.   Enjoy the ease and simplicity of Markdown and discover MDC syntax.     ::card-grid   #title   What's included    #root   :ellipsis    #default     ::card     #title     Nuxt Architecture.     #description     Harness the full power of Nuxt and the Nuxt ecosystem.     ::     ::card     #title     Vue Components.     #description     Use built-in components (or your own!) inside your content.     ::     ::card     #title     Write Markdown.     #description     Enjoy the ease and simplicity of Markdown and discover MDC syntax.     ::   ::     \u003CCodeGroup />  This component uses   slots  to create a tab panel of your code examples or preview.        yarn   add   docus     npm   install   docus     ::code-group     ```bash [Yarn]     yarn   add   docus     ```     ```bash [NPM]     npm   install   docus     ```   ::     \u003CCodeBlock />  To be used inside a   \u003CCodeGroup />  component to display a preview of some rendered code.     Hello World!     /* Added as a child of   `\u003CCodeGroup />`   */    ::code-block{label=\"Preview\" preview}     ::badge     Hello World!     ::   ::     \u003CCopyButton />        :copy-button{content=\"hey!\"}     \u003CIcon />  Icon component gives you access to all   100,000+  icons from   icones.js.org .          :icon{name=\"logos:nuxt-icon\"}   :icon{name=\"logos:vue\"}   :icon{name=\"logos:nuxt-icon\"}     \u003CList />       Important  Always    Amazing  Congrats    Do you know?  You can also do this    Be careful  Use with precautions    Drinking too much  Driving drunk     ::list{type=\"primary\"}   -   **Important**   -   Always   ::    ::list{type=\"success\"}   -   Amazing   -   Congrats   ::    ::list{type=\"info\"}   -   Do you know?   -   You can also do this   ::    ::list{type=\"warning\"}   -   Be careful   -   Use with precautions   ::    ::list{type=\"danger\"}   -   Drinking too much   -   Driving drunk   ::    \u003CSandbox />  Embed CodeSandbox/StackBlitz easily in your documentation with great performances.  Using the   IntersectionObserver  to load when visible in the viewport.        :sandbox{src=\"https://codesandbox.io/embed/nuxt-content-l164h?hidenavigation=1&theme=dark\"}     \u003CTerminal />        :terminal{content=\"nuxi build\"}     \u003CVideoPlayer />         ::div     :video-player{src=\"https://www.youtube.com/watch?v=o9e12WbKrd8\"}   ::   html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}",{"id":71,"path":72,"dir":50,"title":73,"description":74,"keywords":75,"body":79},"content:2.api:2.composables.md","/api/composables","Composables","Discover the Docus composables to use in your custom Vue components and pages.",[76,77,78],"useDocus()","useMenu()","useScrollspy()","  Composables  Discover the Docus composables to use in your custom Vue components and pages.   useDocus()    useDocus  ()  gives access to docus runtime config, all default values and your custom config from   app.config.ts    config  refers to the merged config of the current page.   main ,   header ,   aside ,   footer  and   titleTemplate  can be set from   _dir.yml  and any   page.md  file.  The configs in   app.config  file will be used as defaults.     \u003C  script   setup  >   const   {   config   }   =   useDocus  ()   \u003C/  script  >    \u003C  template  >     \u003C  div  >       \u003C  h1  >{{ config.title }}\u003C/  h1  >       \u003C  p  >{{ config.description }}\u003C/  p  >     \u003C/  div  >   \u003C/  template  >    tree  refers to the current navigation tree that is displayed in the   aside  component.     \u003C  script   setup  >   const   {   tree   }   =   useDocus  ()   \u003C/  script  >    \u003C  template  >     \u003C  DocsAsideTree   :links  =  \"tree\"   />   \u003C/  template  >    useMenu()   useMenu()  gives access to   $menu  plugin controlling mobile navigation globally.     const   {     // Is menu visible     visible  ,     // Close menu function     close  ,     // Open menu function     open  ,     // Toggle menu function     toggle   }   =   useMenu  ()    useScrollspy()   useScrollspy()  is used in   docs  layout to make the ToC display the currently visible headings.     const   {     // Headings on the page     visibleHeadings  ,     // Active headings (for the current page)     activeHeadings  ,     // Update headings (an array of DOM nodes)     updateHeadings   }   =   useScrollspy  ()   html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}",{"id":81,"path":82,"dir":50,"title":83,"description":84,"keywords":85,"body":88},"content:2.api:3.layouts.md","/api/layouts","Layouts","Docus provides multiple built-in layouts for displaying your Markdown pages.",[86,87],"default","page","  Layouts  Docus provides multiple built-in layouts for displaying your Markdown pages.   default  The default layout for every page created in the project. This layout renders multiple section alongside the content:   Aside navigation menu (togglable with   aside: false/true )  Page bottom section (togglable with   bottom: false/true )  Table of content (togglable with   toc: false/true )     ---   aside  :   true   bottom  :   true   toc  :   false   ---    Your awesome content  Current page is live sample of default layout.   page   page  layout is content focused layout. This layout does not render aside menu of table of contents.  This layout accept some configuration from content front-matter.    fluid : By setting   fluid: true  in content front-matter the content will be rendered in full width.   constrainedClass : Using this option you can modify layout container look. Like constraining layout width of changing the background.   padded : Setting   padded: true  in front-matter will add horizontal padding in the layout.     ---   title  :   Home   layout  :   page   fluid  :   true   ---  Check   Home page  as live sample of page layout  html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}",1703828149698]